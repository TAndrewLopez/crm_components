generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// SUBMISSION MODELS
enum tattooColor {
  black_and_grey @map("black and grey")
  color
}

enum submissionStatus {
  unread
  read
}

model submission {
  id                 Int     @id @default(autoincrement())
  name               String  @db.VarChar(255)
  email              String  @db.VarChar(255)
  phone_number       String  @db.VarChar(255)
  preferred_pronouns String? @db.VarChar(255)
  description        String
  size               String  @db.VarChar(255)
  placement          String  @db.VarChar(255)

  color  tattooColor
  status submissionStatus @default(unread)

  author_id Int?
  author    user? @relation(fields: [author_id], references: [id])

  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
}

// PAYMENT MODELS
enum depositStatus {
  paid
  unpaid
}

model deposit {
  id     Int    @id @default(autoincrement())
  amount Int
  email  String @db.VarChar(255)

  status depositStatus @default(unpaid)

  client_id Int?
  client    user? @relation("client", fields: [client_id], references: [id])
  owner_id  Int
  owner     user  @relation("owner", fields: [owner_id], references: [id])

  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
}

// USER MODELS
enum role {
  client
  admin
  owner
  dev
}

model user {
  id           Int    @id @default(autoincrement())
  username     String @db.VarChar(255)
  email        String @db.VarChar(255)
  phone_number String @db.VarChar(255)

  role role @default(client)

  submissions submission[]

  owner_deposits  deposit[] @relation("owner")
  client_deposits deposit[] @relation("client")

  created_at DateTime  @default(now())
  updated_at DateTime? @updatedAt
}
